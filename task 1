# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Set visualization style
sns.set(style="whitegrid")

# 1. Data Loading
# Replace 'titanic.csv' with your dataset path
df = pd.read_csv('titanic.csv')
print("âœ… Data Loaded Successfully")

# 2. Exploratory Data Analysis (EDA)

# Data Type Inspection
print("\nðŸ“Š Data Types:")
print(df.dtypes)

# Summary Statistics
print("\nðŸ“ˆ Summary Statistics:")
print(df.describe(include='all'))

# Missing Value Assessment
print("\nðŸš¨ Missing Values:")
missing_summary = df.isnull().sum()
print(missing_summary[missing_summary > 0])

# Unique Value Counts (for categorical and discrete numerical features)
print("\nðŸ”¢ Unique Value Counts:")
for col in df.columns:
    if df[col].dtype == 'object' or df[col].nunique() < 20:
        print(f"{col}: {df[col].nunique()} unique values")

# 3. Data Visualization

# Categorical Variable Visualization
categorical_cols = df.select_dtypes(include='object').columns
for col in categorical_cols:
    plt.figure(figsize=(8, 4))
    sns.countplot(data=df, x=col, palette='Set2')
    plt.title(f'Distribution of {col}')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()

# Numerical Variable Visualization
numerical_cols = df.select_dtypes(include=['int64', 'float64']).columns
for col in numerical_cols:
    plt.figure(figsize=(8, 4))
    sns.histplot(df[col].dropna(), kde=True, color='skyblue')
    plt.title(f'Distribution of {col}')
    plt.tight_layout()
    plt.show()

# Scatter Plot Example (Age vs Fare)
if 'Age' in df.columns and 'Fare' in df.columns:
    plt.figure(figsize=(8, 6))
    sns.scatterplot(data=df, x='Age', y='Fare', hue='Survived', palette='coolwarm')
    plt.title('Age vs Fare by Survival')
    plt.tight_layout()
    plt.show()

# Correlation Heatmap
plt.figure(figsize=(10, 8))
corr_matrix = df[numerical_cols].corr()
sns.heatmap(corr_matrix, annot=True, cmap='viridis', fmt=".2f", linewidths=0.5)
plt.title('Correlation Heatmap of Numerical Features')
plt.tight_layout()
plt.show()
